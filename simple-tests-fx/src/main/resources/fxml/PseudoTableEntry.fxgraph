package fxml

import javafx.scene.control.Label
import javafx.scene.layout.GridPane
import javafx.scene.layout.HBox
import javafx.scene.control.Button
import java.lang.Double
import javafx.geometry.Insets
import de.jensd.fx.glyphs.materialdesignicons.MaterialDesignIconView
import de.jensd.fx.glyphs.materialdesignicons.MaterialDesignIcon
import javafx.scene.control.ScrollPane
import javafx.scene.layout.VBox

component PseudoTableEntry styledwith [ "./application.css" ] {

	GridPane {
		styleClass : [
			"transparent-pane",
			"pseudo-table-entry",
			"content-text-small"
		],
		minWidth : 100,
		maxWidth : 150,
		Label id fixLine1Label {
			styleClass : [
				"first"
			],
			text : "?",
			textAlignment : "CENTER",
			alignment : "CENTER",
			maxWidth : const Double#MAX_VALUE,
			padding : Insets {
				left : 5,
				right : 5
			},
			static hgrow : "ALWAYS",
			static columnIndex : 0,
			static rowIndex : 0,
			static fillWidth : true
		},
		ScrollPane id innerScrollPane {
			styleClass : [
				"transparent-scroll-pane"
			],
			hbarPolicy : "NEVER",
			vbarPolicy : "NEVER",
			fitToWidth : true,
			fitToHeight : true,
			maxHeight : const Double#MAX_VALUE,
			maxWidth : const Double#MAX_VALUE,
			static vgrow : "ALWAYS",
			static hgrow : "ALWAYS",
			static columnIndex : 0,
			static rowIndex : 1,
			static fillWidth : true,
			content : VBox {
				maxWidth : const Double#MAX_VALUE,
				Label id line1Label {
					styleClass : [
						"first"
					],
					text : "?",
					maxWidth : const Double#MAX_VALUE,
					alignment : "CENTER",
					padding : Insets {
						right : 5,
						left : 5
					},
					managed : bind line1Label#visible,
					static vgrow : "ALWAYS"
				},
				Label id line2Label {
					text : "?",
					maxWidth : const Double#MAX_VALUE,
					alignment : "CENTER",
					padding : Insets {
						right : 5,
						left : 5
					},
					managed : bind line2Label#visible,
					static vgrow : "ALWAYS"
				},
				Label id line3Label {
					text : "?",
					maxWidth : const Double#MAX_VALUE,
					alignment : "CENTER",
					padding : Insets {
						right : 5,
						left : 5
					},
					managed : bind line3Label#visible,
					static vgrow : "ALWAYS"
				},
				Label id line4Label {
					text : "?",
					maxWidth : const Double#MAX_VALUE,
					alignment : "CENTER",
					padding : Insets {
						right : 5,
						left : 5
					},
					managed : bind line4Label#visible,
					static vgrow : "ALWAYS"
				},
				Label id line5Label {
					text : "?",
					maxWidth : const Double#MAX_VALUE,
					alignment : "CENTER",
					padding : Insets {
						right : 5,
						left : 5
					},
					managed : bind line5Label#visible,
					static vgrow : "ALWAYS"
				},
				Label id line6Label {
					text : "?",
					maxWidth : const Double#MAX_VALUE,
					alignment : "CENTER",
					padding : Insets {
						right : 5,
						left : 5
					},
					managed : bind line6Label#visible,
					static vgrow : "ALWAYS"
				},
				Label id line7Label {
					text : "?",
					maxWidth : const Double#MAX_VALUE,
					alignment : "CENTER",
					padding : Insets {
						right : 5,
						left : 5
					},
					managed : bind line7Label#visible,
					static vgrow : "ALWAYS"
				},
				Label id line8Label {
					text : "?",
					maxWidth : const Double#MAX_VALUE,
					alignment : "CENTER",
					padding : Insets {
						right : 5,
						left : 5
					},
					managed : bind line8Label#visible,
					static vgrow : "ALWAYS"
				},
				Label id line9Label {
					text : "?",
					maxWidth : const Double#MAX_VALUE,
					alignment : "CENTER",
					padding : Insets {
						right : 5,
						left : 5
					},
					managed : bind line9Label#visible,
					static vgrow : "ALWAYS"
				},
				Label id line10Label {
					text : "?",
					maxWidth : const Double#MAX_VALUE,
					alignment : "CENTER",
					padding : Insets {
						right : 5,
						left : 5
					},
					managed : bind line10Label#visible,
					static vgrow : "ALWAYS"
				}
			}
		},
		HBox id fixLine2Box {
			styleClass : [
				"last"
			],
			spacing : 5,
			alignment : "CENTER",
			maxWidth : const Double#MAX_VALUE,
			Button id actionCopy {
//				styleClass : [
//					"button-transparent"
//				],
//				graphic : MaterialDesignIconView {
//					glyphName : const MaterialDesignIcon#CONTENT_COPY,
//					glyphSize : 16
//					// , fill : const Color#WHITE
//
//				},
				contentDisplay : "GRAPHIC_ONLY"
			},
			Button id actionDelete {
//				styleClass : [
//					"button-transparent"
//				],
//				graphic : MaterialDesignIconView {
//					glyphName : const MaterialDesignIcon#DELETE,
//					glyphSize : 16
//					// , fill : const Color#WHITE,
//
//				},
				contentDisplay : "GRAPHIC_ONLY"
			},
			padding : Insets {
				left : 5,
				right : 5
			},
			static hgrow : "ALWAYS",
			static columnIndex : 0,
			static rowIndex : 2, // 19,
			static fillWidth : true
		}
	}
}
